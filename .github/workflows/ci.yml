name: 1nce-iot-c-sdk-workflows

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
     image: ghcr.io/1nce-gmbh/1nce-iot-c-sdk:latest
     credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.CONTAINER_KEY }}

    steps:
    - uses: actions/checkout@v2

    - name: Build (CMake)
      run: |
        cmake -S test -B build/  \
        -G "Unix Makefiles" \
        -DCMAKE_BUILD_TYPE=Debug \
        -DBUILD_CLONE_SUBMODULES=ON \
        -DCMAKE_C_FLAGS='--coverage -Wall -Wextra -Werror -DNDEBUG'
         make -C build/ all
         
  complexity:
    runs-on: ubuntu-latest
    container:
     image: ghcr.io/1nce-gmbh/1nce-iot-c-sdk:latest
     credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.CONTAINER_KEY }}

    steps:
    - uses: actions/checkout@v2
    - name: Check Complexity
      run: find source/ -iname '*.c' |
           xargs complexity --scores --threshold=0 --horrid-threshold=8
       

  formatting:
    runs-on: ubuntu-latest
    container:
     image: ghcr.io/1nce-gmbh/1nce-iot-c-sdk:latest
     credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.CONTAINER_KEY }}

    steps:
    - uses: actions/checkout@v2             
    - name: Check Formatting
      run: cd source && find . -iname "*.[hc]" -type f -exec uncrustify --check -c ../tools/uncrustify.cfg -l C {} +
      
  spelling:
    runs-on: ubuntu-latest
    container:
     image: ghcr.io/1nce-gmbh/1nce-iot-c-sdk:latest
     credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.CONTAINER_KEY }}

    steps:
    - uses: actions/checkout@v2             
    - name: Check Spelling
      run: |
          export USER=${{ github.actor }}
          PATH=$PATH:/CI-CD-Github-Actions/spellings/tools
          for lexfile in `find ./ -name lexicon.txt`
            do dir=${lexfile%/lexicon.txt}
              echo $dir
              find-unknown-comment-words --directory $dir
              if [ $? -ne "0" ]
              then
                exit 1
              fi
            done

      
  doxygen:
    runs-on: ubuntu-latest
    container:
     image: ghcr.io/1nce-gmbh/1nce-iot-c-sdk:latest
     credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.CONTAINER_KEY }}

    steps:
    - uses: actions/checkout@v2             
    - name: Check Doxygen
      run: |
          doxygen docs/doxygen/Doxyfile 2>&1 | tee doxyoutput.txt
          if [ "$(wc -c < doxyoutput.txt | bc)" = "0" ]
            then exit 0
          else 
            exit 1 
          fi





      
